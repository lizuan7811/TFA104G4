				} else if ("Customer.txt".equals(new File(sht).getName())){
						sql = "INSERT INTO Customer (idCustomer, name, profic, nickName, account, "
						+ "password, email, phone, createdTime, suspended, externalAcc, commentReportedNum, diaryReportedNum) "
						+ "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
						ps = conn.prepareStatement(sql);

						while((tempStr = bfr.readLine()) != null){
						
							System.out.println(tempStr);
							String[] colArr = tempStr.split("\t");
							j = 0;
							
							while (j < colArr.length - 1) {
								ps.setInt(1,0);
								j++;
								ps.setString(2, colArr[j++].toString());
//								ps.setBytes(3, is);
								ps.setString(4, colArr[j++].toString());
								ps.setString(5, colArr[j++].toString());
								ps.setString(6, colArr[j++].toString());
			 					ps.setString(7, colArr[j++].toString());
								ps.setString(8, colArr[j++].toString());
								ps.setTimestamp(9, getTS(j++));
								ps.setBoolean(10, Boolean.valueOf(colArr[j++].toString()));
								ps.setInt(11, Integer.parseInt(colArr[j++]));
								ps.setInt(12, Integer.parseInt(colArr[j++]));
								ps.setInt(13, Integer.parseInt(colArr[j]));
								
								ps.addBatch();
							}
						}
						
					} else if ("Address.txt".equals(new File(sht).getName())){
					
						sql = "INSERT INTO Address (idAddress, idCustomer, "
						+ "address, tag, longitude, latitude, createdTime, defaultOption)"
						+ "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
						ps = conn.prepareStatement(sql);

						while ((tempStr = bfr.readLine()) != null){
						
							System.out.println(tempStr);
							String[] colArr = tempStr.split("\t");
							j = 0;
							
							while (j < colArr.length - 1) {
								ps.setInt(1,0);
								j++;
								ps.setInt(2, Integer.parseInt(colArr[j++]));
								ps.setString(3, colArr[j++].toString());
								ps.setString(4, colArr[j++].toString());
								ps.setDouble(5, Double.parseDouble(colArr[j++]));
								ps.setDouble(6, Double.parseDouble(colArr[j++]));
								ps.setTimestamp(7, getTS(j++));
								ps.setBoolean(8, Boolean.valueOf(colArr[j].toString()));
				
								ps.addBatch();
							}
						}
					
					} else if ("Card.txt".equals(new File(sht).getName())){
					
						sql = "INSERT INTO Card (idCard, idCustomer, type, "
						+ "number, expiryDate, createdTime, defaultOption) VALUES (?, ?, ?, ?, ?, ?, ?)";
						ps = conn.prepareStatement(sql);

						while ((tempStr = bfr.readLine()) != null){
						
							System.out.println(tempStr);
							String[] colArr = tempStr.split("\t");
							j = 0;
							
							while (j < colArr.length - 1) {
					
								ps.setInt(1,0);
								j++;
								ps.setInt(2, Integer.parseInt(colArr[j++]));
								ps.setBoolean(3, Boolean.valueOf(colArr[j++].toString()));
								ps.setString(4, colArr[j++].toString());
								ps.setDate(5, (java.sql.Date) new SimpleDateFormat("yyyy-MM-dd").parse(colArr[j++].toString())); 
								ps.setTimestamp(6, getTS(j++));
								ps.setBoolean(7, Boolean.valueOf(colArr[j].toString()));
				
								ps.addBatch();
							}
						}
						
					} else if ("FinalOrder.txt".equals(new File(sht).getName())){
					
						sql = "INSERT INTO FinalOrder (idFinalOrder, idCustomer, recipient, "
						+ "recipientAddress, orderAmount, createdTime, shipTime, arrivalTime, footnote)"
						+ "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
						ps = conn.prepareStatement(sql);
					
						while ((tempStr = bfr.readLine()) != null){
						
							System.out.println(tempStr);
							String[] colArr = tempStr.split("\t");
							j = 0;
							
							while (j < colArr.length - 1) {
					
								ps.setInt(1,0);
								j++;
								ps.setInt(2, Integer.parseInt(colArr[j++]));
								ps.setString(3, colArr[j++].toString());
								ps.setString(4, colArr[j++].toString());
								ps.setDouble(5, Double.parseDouble(colArr[j++]));
								ps.setTimestamp(6, getTS(j++));
								ps.setTimestamp(7, getTS(j++));
								ps.setTimestamp(8, getTS(j++));
								ps.setString(9, colArr[j].toString());
				
								ps.addBatch();
							}
						}
			
			
			catch(SQLException | NumberFormatException | IOException | ParseException sqle)
			